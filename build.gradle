buildscript {
    repositories {
        maven {
            url "s3://more-than-heroic-gradle-repository/releases"
            credentials(AwsCredentials) {
                accessKey AWS_ACCESS_KEY
                secretKey AWS_SECRET_KEY
            }
        }
        maven {
            url "s3://more-than-heroic-gradle-repository/snapshots"
            credentials(AwsCredentials) {
                accessKey AWS_ACCESS_KEY
                secretKey AWS_SECRET_KEY
            }
        }

        mavenCentral()
    }

    dependencies {
        classpath group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: '1.5.7.RELEASE'
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    repositories {
        maven {
            url "s3://more-than-heroic-gradle-repository/releases"
            credentials(AwsCredentials) {
                accessKey AWS_ACCESS_KEY
                secretKey AWS_SECRET_KEY
            }
        }
        maven {
            url "s3://more-than-heroic-gradle-repository/snapshots"
            credentials(AwsCredentials) {
                accessKey AWS_ACCESS_KEY
                secretKey AWS_SECRET_KEY
            }
        }

        mavenCentral()
    }

    publishing {
        repositories {
            maven {
                url "s3://more-than-heroic-gradle-repository/releases"
                credentials(AwsCredentials) {
                    accessKey AWS_ACCESS_KEY
                    secretKey AWS_SECRET_KEY
                }
            }
            maven {
                url "s3://more-than-heroic-gradle-repository/snapshots"
                credentials(AwsCredentials) {
                    accessKey AWS_ACCESS_KEY
                    secretKey AWS_SECRET_KEY
                }
            }
        }

        publications {
            mavenJava(MavenPublication) {
                from components.java
            }
        }
    }

    group = 'com.morethanheroic.swords'
    version = '0.0.1'

    ext {
        mybatis_version = '3.4.1'
        guava_version = '18.0'
        checkstyle_version = '6.13'
        findbugs_version = '3.0.1'
        commons_lang_version = '3.0.1'
        jackson_version = '2.6.4'

        checkstyle_config = {
            toolVersion = project.ext.checkstyle_version
            configFile = file("${rootProject.rootDir}/config/checkstyle/checkstyle.xml")
        }

        findbugs_config = {
            toolVersion = project.ext.findbugs_version
            effort = "max"
            reportLevel = "medium"
        }
    }

    dependencies {
        compile group: 'org.projectlombok', name: 'lombok', version: '1.16.6'
        compile group: 'com.google.guava', name: 'guava', version: guava_version

        compile group: 'com.morethanheroic.swords', name: 'swords-datapack', version: '0.0.320'

        compile group: 'com.morethanheroic.swords', name: 'swords-user-service', version: '1.0.2'
    }

    compileJava {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-jdbc'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter') {
        exclude(module: 'commons-logging')
    }
    compile group: 'org.springframework.security', name: 'spring-security-core'

    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test') {
        exclude(module: 'commons-logging')
    }

    compile group: 'org.logback-extensions', name: 'logback-ext-loggly', version: '0.1.4'

    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310'

    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.5'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'

    compile group: 'org.liquibase', name: 'liquibase-core'
    compile group: 'mysql', name: 'mysql-connector-java'
    compile group: 'org.mybatis', name: 'mybatis-spring', version: '1.3.0'
    compile group: 'org.mybatis', name: 'mybatis', version: mybatis_version

    compile group: 'com.morethanheroic', name: 'common-session', version: '1.5.2'
    compile group: 'com.morethanheroic', name: 'common-application', version: '1.0.8'
    compile group: 'com.morethanheroic', name: 'common-sql', version: '1.0.2'
    compile group: 'com.morethanheroic', name: 'common-memoize', version: '1.0.0'
    compile group: 'com.morethanheroic', name: 'common-entity', version: '1.0.0'
    compile group: 'com.morethanheroic', name: 'common-security', version: '1.0.0'
    compile group: 'com.morethanheroic', name: 'common-xml', version: '1.0.1'
    compile group: 'com.morethanheroic', name: 'common-dependency-injection', version: '1.0.2'

    compile group: 'com.morethanheroic.swords', name: 'swords-race-definition', version: '1.0.2'
    compile group: 'com.morethanheroic.swords', name: 'swords-user-service', version: '1.0.2'

    testCompile group: 'org.testng', name: 'testng', version: '6.9.9'
    testCompile group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'

    compile project(':common-validator')

    compile project(':swords-equipment')
    compile project(':swords-vampire')
    compile project(':swords-response')
    compile project(':swords-skill')
    compile project(':swords-skill-scavenging')
    compile project(':swords-effect')
    compile project(':swords-web')
    compile project(':swords-money')
    compile project(':swords-item')
    compile project(':swords-monster')
    compile project(':swords-journal')
    compile project(':swords-attribute')
    compile project(':swords-session')
    compile project(':swords-inventory')
    compile project(':swords-registration')
    compile project(':swords-combat')
    compile project(':swords-settings')
}

apply plugin: 'application'
mainClassName = 'com.morethanheroic.swords.SwordsorceryServerApplication'

apply plugin: 'spring-boot'

task stage(dependsOn: ['clean', 'installApp'])